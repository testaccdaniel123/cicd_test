name: Benchmark Workflow

on:
  push:
    paths:
      - 'Projects/**'
      - 'Tools/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [high-count, low-count, b-tree-query-differences, selectivity-change, hash-query-differences, join-type]

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      TIME: 8
      THREADS: 1
      EVENTS: 0
      REPORT_INTERVAL: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      # Fetch changes
      - name: Detect Changed Files
        id: changes
        run: |
          # Get the number of commits on the branch
          BRANCH_COMMIT_COUNT=$(git rev-list --count HEAD)
          
          if [ "$BRANCH_COMMIT_COUNT" -eq "1" ]; then
          # If it's the first commit, compare with the latest from main
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          else
          # Otherwise, compare with the previous commit
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          fi
    
          echo "Changed files: $CHANGED_FILES"

          # Define the mapping for each test-type to the required file patterns
          declare -A patterns
          patterns=( 
            ["high-count"]="./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true ./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
            ["low-count"]="./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true ./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
            ["b-tree-query-differences"]="./Projects/Index/B_Tree/Scripts/query_differences:false"
            ["selectivity-change"]="./Projects/Index/Hash/Scripts/selectivity_changes:true"
            ["hash-query-differences"]="./Projects/Index/Hash/Scripts/query_differences:false"
            ["join-type"]="./Projects/Join_Typ/Scripts/int_queries:false ./Projects/Join_Typ/Scripts/varchar_queries:true"
          )

          # Dynamically check based on the test type and patterns
          required_files="${patterns[${{ matrix.test-type }}]}"

          # Check if required file changes are detected
          detected=false
          for pattern in $required_files; do
            if echo "$CHANGED_FILES" | grep -q "$pattern"; then
              echo "daniel detected"
              detected=true
            else
              echo "daniel not detected"
              detected=false
              break
            fi
          done

          # Set the environment variable accordingly
          if [ "$detected" = true ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

          echo "Changes detected logic executed."

      - name: Cache pip dependencies
        if: env.changes_detected == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: env.changes_detected == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y sysbench
          python -m pip install --upgrade pip
          pip install pandas matplotlib

      - name: Start MySQL container
        if: env.changes_detected == 'true'
        run: |
          docker run --name mysql-${{ matrix.test-type }} -d \
            -e MYSQL_ROOT_PASSWORD=$DB_PASS \
            -e MYSQL_DATABASE=$DB_NAME \
            -p $DB_PORT:3306 mysql:8.0

          echo "Waiting for MySQL..."
          until docker exec mysql-${{ matrix.test-type }} mysqladmin --user=root --password=$DB_PASS --host=127.0.0.1 --port=$DB_PORT ping --silent; do sleep 1; done
          echo "MySQL is ready!"

      - name: Run sysbench script
        if: env.changes_detected == 'true'
        run: |
          chmod +x Tools/sysbench_script.sh
          if [ "${{ matrix.test-type }}" == "high-count" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/B_Tree/high_counts" \
              -len "500,5000" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
          elif [ "${{ matrix.test-type }}" == "low-count" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/B_Tree/low_counts" \
              -len "10,50" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
          elif [ "${{ matrix.test-type }}" == "b-tree-query-differences" ]; then
            Tools/sysbench_script.sh \
            -out "./Output/B_Tree/query_differences" \
            -script:"./Projects/Index/B_Tree/Scripts/query_differences:false"
          elif [ "${{ matrix.test-type }}" == "selectivity-change" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/Hash/selectivity_changes" \
              -len "10,100,500" \
              -script:"./Projects/Index/Hash/Scripts/selectivity_changes:true"         
          elif [ "${{ matrix.test-type }}" == "hash-query-differences" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/Hash/query_differences" \
              -script:"./Projects/Index/Hash/Scripts/query_differences:false"
          elif [ "${{ matrix.test-type }}" == "join-type" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/Join_Typ" \
              -len "1,64" \
              -script:"./Projects/Join_Typ/Scripts/int_queries:false" \
              -script:"./Projects/Join_Typ/Scripts/varchar_queries:true"          
          fi

      - name: Stop MySQL container
        if: env.changes_detected == 'true'
        run: |
          docker stop mysql-${{ matrix.test-type }}
          docker rm mysql-${{ matrix.test-type }}

      - name: Upload output
        if: env.changes_detected == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: combined_output
          path: Output
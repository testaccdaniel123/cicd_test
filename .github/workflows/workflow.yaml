name: Benchmark Workflow

on:
  push:
    paths:
      - 'Projects/**'
      - 'Tools/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [high-count, low-count, b-tree-query-differences, selectivity-change, hash-query-differences, join-type]

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      TIME: 18
      THREADS: 4
      EVENTS: 0
      REPORT_INTERVAL: 2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Map patterns for matrix values
      - name: Set directory patterns
        id: set_patterns
        run: |
          declare -A patterns=( 
            ["high-count"]="./Projects/Index/B_Tree/Scripts/count_row_changes/with_index ./Projects/Index/B_Tree/Scripts/count_row_changes/without_index"
            ["low-count"]="./Projects/Index/B_Tree/Scripts/count_row_changes/with_index ./Projects/Index/B_Tree/Scripts/count_row_changes/without_index"
            ["b-tree-query-differences"]="./Projects/Index/B_Tree/Scripts/query_differences"
            ["selectivity-change"]="./Projects/Index/Hash/Scripts/selectivity_changes"
            ["hash-query-differences"]="./Projects/Index/Hash/Scripts/query_differences"
            ["join-type"]="./Projects/Join_Typ/Scripts/int_queries ./Projects/Join_Typ/Scripts/varchar_queries"
          )
          
          # Convert patterns to a string based on matrix.test-type
          PATTERN=${patterns[${{ matrix.test-type }}]}
          echo "patterns=${PATTERN}" >> $GITHUB_ENV

      # Calculate hash for the directories specified by the patterns
      - name: Calculate hash of directories
        id: calculate_hash
        run: |
          # Find all files recursively, sort by name, and calculate hash with file contents and paths
          HASH=$(find $patterns -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum | awk '{print $1}')
          echo "Calculated hash: $HASH"
          echo "hash=$HASH" >> $GITHUB_ENV

      # Restore cached output if it exists
      - name: Restore cached output
        id: restore_cache
        uses: actions/cache@v3
        with:
          path: ./Output/${{ matrix.test-type }}
          key: output-${{ matrix.test-type }}-${{ env.hash }}

      # Determine whether to skip script execution based on cache existence
      - name: Should run check
        id: should_run
        run: |
          if [ -d "./Output/${{ matrix.test-type }}" ]; then
            echo "Cache exists. Skipping script execution."
            echo "should_run=false" >> $GITHUB_ENV
          else
            echo "No cache found. Will execute the script."
            echo "should_run=true" >> $GITHUB_ENV
          fi

      # Install dependencies if needed
      - name: Install dependencies
        if: env.should_run == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y sysbench
          python -m pip install --upgrade pip
          pip install pandas matplotlib

      # Start MySQL container if running
      - name: Start MySQL container
        if: env.should_run == 'true'
        run: |
          docker run --name mysql-${{ matrix.test-type }} -d \
            -e MYSQL_ROOT_PASSWORD=$DB_PASS \
            -e MYSQL_DATABASE=$DB_NAME \
            -p $DB_PORT:3306 mysql:8.0
          
          echo "Waiting for MySQL..."
          until docker exec mysql-${{ matrix.test-type }} mysqladmin --user=root --password=$DB_PASS --host=127.0.0.1 --port=$DB_PORT ping --silent; do sleep 1; done
          echo "MySQL is ready!"

      # Run the main script if changes were detected
      - name: Run sysbench script
        if: env.should_run == 'true'
        run: |
          chmod +x Tools/sysbench_script.sh
          if [ "${{ matrix.test-type }}" == "high-count" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/${{ matrix.test-type }}" \
              -len "500,5000" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
          elif [ "${{ matrix.test-type }}" == "low-count" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/${{ matrix.test-type }}" \
              -len "10,50" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
          elif [ "${{ matrix.test-type }}" == "b-tree-query-differences" ]; then
            Tools/sysbench_script.sh \
            -out "./Output/${{ matrix.test-type }}" \
            -script:"./Projects/Index/B_Tree/Scripts/query_differences:false"
          elif [ "${{ matrix.test-type }}" == "selectivity-change" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/${{ matrix.test-type }}" \
              -len "10,100,500" \
              -script:"./Projects/Index/Hash/Scripts/selectivity_changes:true"         
          elif [ "${{ matrix.test-type }}" == "hash-query-differences" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/${{ matrix.test-type }}" \
              -script:"./Projects/Index/Hash/Scripts/query_differences:false"
          elif [ "${{ matrix.test-type }}" == "join-type" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/${{ matrix.test-type }}" \
              -len "1,64" \
              -script:"./Projects/Join_Typ/Scripts/int_queries:false" \
              -script:"./Projects/Join_Typ/Scripts/varchar_queries:true"          
          fi

      # Stop MySQL container if changes were detected
      - name: Stop MySQL container
        if: env.should_run == 'true'
        run: |
          docker stop mysql-${{ matrix.test-type }}
          docker rm mysql-${{ matrix.test-type }}

      # Save output to cache if changes were detected
      - name: Save output to cache
        if: env.should_run == 'true'
        uses: actions/cache@v3
        with:
          path: ./Output/${{ matrix.test-type }}
          key: output-${{ matrix.test-type }}-${{ env.hash }}

      # Upload all (still use artifact for combined output)
      - name: Upload all
        uses: actions/upload-artifact@v3
        with:
          name: combined-output
          path: Output
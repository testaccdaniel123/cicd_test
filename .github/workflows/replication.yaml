name: MySQL Replication Test

on:
  push:
    paths:
      - '.github/workflows/replication.yaml'
  workflow_dispatch:

jobs:
  run-setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start MySQL Replication container
        run: |
          number_of_replicas=$(( $(jq '.mysql_master_slave.REPLICAS_COUNT' envs.json) + 1 ))
          chmod +x .github/scripts/setup_master_replica.sh
          .github/scripts/setup_master_replica.sh $number_of_replicas  
          echo "number_of_replicas=$number_of_replicas" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sysbench
          python -m pip install --upgrade pip
          pip install pandas matplotlib

      - name: Run sysbench script
        run: |
          chmod +x Tools/sysbench_script.sh
          
          Tools/sysbench_script.sh \
          -out "./Projects/Replication/Output" \
          -scripts '{
           "./Projects/Replication/Scripts/int_queries": {
             "db": ["mysql_master_slave"]
           }
          }'
          
      - name: Cleanup MySQL containers
        run: |
          docker ps -q -f name=mysql-primary | xargs -r docker stop | xargs -r docker rm
          for ((i=1; i<=${{ env.number_of_replicas }}; i++)); do
            docker ps -q -f name=mysql-replica-${i} | xargs -r docker stop | xargs -r docker rm
          done

      - name: Upload test outputs
        uses: actions/upload-artifact@v4
        with:
          name: "daniel-test-123"
          path: "./Projects/Replication/Output"
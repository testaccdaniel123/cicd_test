name: Benchmark Workflow

on:
  push:
    paths:
      - 'Projects/**'
      - 'Tools/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [high-count, low-count, b-tree-query-differences, selectivity-change, hash-query-differences, join-type]

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      TIME: 18
      THREADS: 4
      EVENTS: 0
      REPORT_INTERVAL: 2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set directory patterns
        id: set_patterns
        run: |
          declare -A patterns=( 
            ["high-count"]="./Projects/Index/B_Tree/Scripts/count_row_changes/with_index ./Projects/Index/B_Tree/Scripts/count_row_changes/without_index"
            ["low-count"]="./Projects/Index/B_Tree/Scripts/count_row_changes/with_index ./Projects/Index/B_Tree/Scripts/count_row_changes/without_index"
            ["b-tree-query-differences"]="./Projects/Index/B_Tree/Scripts/query_differences"
            ["selectivity-change"]="./Projects/Index/Hash/Scripts/selectivity_changes"
            ["hash-query-differences"]="./Projects/Index/Hash/Scripts/query_differences"
            ["join-type"]="./Projects/Join_Typ/Scripts/int_queries ./Projects/Join_Typ/Scripts/varchar_queries"
          )
          
          PATTERN=${patterns[${{ matrix.test-type }}]}
          echo "patterns=${PATTERN}" >> $GITHUB_ENV

      - name: Calculate hash of directories
        id: calculate_hash
        run: |
          HASH=$(find $patterns -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum | awk '{print $1}')
          echo "Calculated hash: $HASH"
          echo "hash=$HASH" >> $GITHUB_ENV

      - name: Check existence and handle outputs
        id: check_existing
        run: |
          # Fetch the latest changes from the saved_outputs branch
          git fetch origin saved_outputs
          
          # Set expected directory path
          OUTPUT_DIR="output-${{ matrix.test-type }}-${{ env.hash }}"
          
          # Check if expected directory exists and copy if it does
          if git ls-tree -r --name-only origin/saved_outputs | grep -q "^$OUTPUT_DIR"; then
            mkdir -p Output/${{ matrix.test-type }}
            git checkout origin/saved_outputs -- "$OUTPUT_DIR" && cp -r "$OUTPUT_DIR/." Output/${{ matrix.test-type }}
            echo "should_run=false" >> $GITHUB_ENV
          else
            echo "should_run=true" >> $GITHUB_ENV
          fi      

      - name: Install dependencies
        if: env.should_run == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y sysbench
          python -m pip install --upgrade pip
          pip install pandas matplotlib

      - name: Start MySQL container
        if: env.should_run == 'true'
        run: |
          docker run --name mysql-${{ matrix.test-type }} -d \
            -e MYSQL_ROOT_PASSWORD=$DB_PASS \
            -e MYSQL_DATABASE=$DB_NAME \
            -p $DB_PORT:3306 mysql:8.0
          
          echo "Waiting for MySQL..."
          until docker exec mysql-${{ matrix.test-type }} mysqladmin --user=root --password=$DB_PASS --host=127.0.0.1 --port=$DB_PORT ping --silent; do sleep 1; done
          echo "MySQL is ready!"

      - name: Run sysbench script
        if: env.should_run == 'true'
        run: |
          chmod +x Tools/sysbench_script.sh
          Tools/sysbench_script.sh \
            -out "./Output/${{ matrix.test-type }}" \
            -len "500,5000" \
            -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true" \
            -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"

      - name: Stop MySQL container
        if: env.should_run == 'true'
        run: |
          docker stop mysql-${{ matrix.test-type }}
          docker rm mysql-${{ matrix.test-type }}

      - name: Commit outputs to saved_outputs branch
        if: env.should_run == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          git checkout -B saved_outputs

          mkdir -p output-${{ matrix.test-type }}-${{ env.hash }}
          cp -r ./Output/${{ matrix.test-type }} ./output-${{ matrix.test-type }}-${{ env.hash }}

          git add ./output-${{ matrix.test-type }}-${{ env.hash }}
          git commit -m "Add output-${{ matrix.test-type }}-${{ env.hash }}"

          # Pull changes from the remote before pushing
          git pull origin saved_outputs --rebase

          # Now push the changes
          git push origin saved_outputs
      - name: Upload all
        uses: actions/upload-artifact@v3
        with:
          name: combined-output
          path: Output
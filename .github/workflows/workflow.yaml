name: Benchmark Workflow

on:
  push:
    paths:
      - 'Projects/**'
      - 'Tools/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [high-count, low-count, b-tree-query-differences, selectivity-change, hash-query-differences, join-type]

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      TIME: 8
      THREADS: 1
      EVENTS: 0
      REPORT_INTERVAL: 1

    steps:
      # Fetch changes
      - name: Fetch and Detect Changes
        id: changes
        run: |
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only HEAD..origin/main)
          echo "Changed files: $CHANGED_FILES"
          if echo "$CHANGED_FILES" | grep -qE 'Projects/.*|Tools/.*|.github/.*'; then
            echo "Daniel detected"
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "Daniel not detected"
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      # Conditional caching and dependency install only when changes are detected
      - name: Cache pip dependencies
        if: env.changes_detected == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: env.changes_detected == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y sysbench
          python -m pip install --upgrade pip
          pip install pandas matplotlib

      # Dynamically initialize MySQL only when changes are detected
      - name: Start MySQL container
        if: env.changes_detected == 'true'
        run: |
          docker run --name mysql-${{ matrix.test-type }} -d \
            -e MYSQL_ROOT_PASSWORD=$DB_PASS \
            -e MYSQL_DATABASE=$DB_NAME \
            -p $DB_PORT:3306 mysql:8.0
          
          echo "Waiting for MySQL..."
          until docker exec mysql-${{ matrix.test-type }} mysqladmin --user=root --password=$DB_PASS --host=127.0.0.1 --port=$DB_PORT ping --silent; do sleep 1; done
          echo "MySQL is ready!"

      # Execute the relevant sysbench script
      - name: Run sysbench script
        if: env.changes_detected == 'true'
        run: |
          chmod +x Tools/sysbench_script.sh
          if [ "${{ matrix.test-type }}" == "high-count" ]; then
            Tools/sysbench_script.sh \
              -out "./Output/B_Tree/high_counts" \
              -len "500,5000" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/with_index:true" \
              -script:"./Projects/Index/B_Tree/Scripts/count_row_changes/without_index:true"
          fi

      # Stop MySQL container after tests
      - name: Stop MySQL container
        if: env.changes_detected == 'true'
        run: |
          docker stop mysql-${{ matrix.test-type }}
          docker rm mysql-${{ matrix.test-type }}

      # Upload artifacts always
      - name: Upload output
        if: env.changes_detected == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: combined_output
          path: Output